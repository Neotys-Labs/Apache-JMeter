<?xml version="1.0" encoding="UTF-8"?><jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.2">  <hashTree>    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">      <boolProp name="TestPlan.functional_mode">false</boolProp>      <boolProp name="TestPlan.tearDown_on_shutdown">false</boolProp>      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">        <collectionProp name="Arguments.arguments"/>      </elementProp>    </TestPlan>    <hashTree>      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">        <stringProp name="filename"></stringProp>        <stringProp name="fileEncoding"></stringProp>        <stringProp name="variableNames"></stringProp>        <boolProp name="ignoreFirstLine">false</boolProp>        <stringProp name="delimiter">,</stringProp>        <boolProp name="quotedData">false</boolProp>        <boolProp name="recycle">true</boolProp>        <boolProp name="stopThread">false</boolProp>        <stringProp name="shareMode">shareMode.all</stringProp>      </CSVDataSet>      <hashTree/>      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">        <boolProp name="ResultCollector.error_logging">false</boolProp>        <objProp>          <name>saveConfig</name>          <value class="SampleSaveConfiguration">            <time>true</time>            <latency>true</latency>            <timestamp>true</timestamp>            <success>true</success>            <label>true</label>            <code>true</code>            <message>true</message>            <threadName>true</threadName>            <dataType>true</dataType>            <encoding>false</encoding>            <assertions>true</assertions>            <subresults>true</subresults>            <responseData>false</responseData>            <samplerData>false</samplerData>            <xml>false</xml>            <fieldNames>true</fieldNames>            <responseHeaders>false</responseHeaders>            <requestHeaders>false</requestHeaders>            <responseDataOnError>false</responseDataOnError>            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>            <assertionsResultsToSave>0</assertionsResultsToSave>            <bytes>true</bytes>            <sentBytes>true</sentBytes>            <url>true</url>            <threadCounts>true</threadCounts>            <idleTime>true</idleTime>            <connectTime>true</connectTime>          </value>        </objProp>        <stringProp name="filename"></stringProp>      </ResultCollector>      <hashTree/>      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group A" enabled="true">        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">          <stringProp name="LoopController.loops">1</stringProp>          <boolProp name="LoopController.continue_forever">false</boolProp>        </elementProp>        <stringProp name="ThreadGroup.num_threads">1</stringProp>        <stringProp name="ThreadGroup.ramp_time">1</stringProp>        <boolProp name="ThreadGroup.delayedStart">false</boolProp>        <boolProp name="ThreadGroup.scheduler">false</boolProp>        <stringProp name="ThreadGroup.duration"></stringProp>        <stringProp name="ThreadGroup.delay"></stringProp>        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>      </ThreadGroup>      <hashTree/>      <HttpMirrorControl guiclass="HttpMirrorControlGui" testclass="HttpMirrorControl" testname="HTTP Mirror Server" enabled="true">        <stringProp name="HttpMirrorControlGui.port">8081</stringProp>        <stringProp name="HttpMirrorControlGui.maxPoolSize">0</stringProp>        <stringProp name="HttpMirrorControlGui.maxQueueSize">25</stringProp>      </HttpMirrorControl>      <hashTree/>      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group B" enabled="true">        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">          <stringProp name="LoopController.loops">1</stringProp>          <boolProp name="LoopController.continue_forever">false</boolProp>        </elementProp>        <stringProp name="ThreadGroup.num_threads">1</stringProp>        <stringProp name="ThreadGroup.ramp_time">1</stringProp>        <boolProp name="ThreadGroup.delayedStart">false</boolProp>        <boolProp name="ThreadGroup.scheduler">false</boolProp>        <stringProp name="ThreadGroup.duration"></stringProp>        <stringProp name="ThreadGroup.delay"></stringProp>        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>      </ThreadGroup>      <hashTree/>      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group" enabled="true">        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">          <stringProp name="LoopController.loops">1</stringProp>          <boolProp name="LoopController.continue_forever">false</boolProp>        </elementProp>        <stringProp name="ThreadGroup.num_threads">1</stringProp>        <stringProp name="ThreadGroup.ramp_time">1</stringProp>        <boolProp name="ThreadGroup.scheduler">false</boolProp>        <stringProp name="ThreadGroup.duration"></stringProp>        <stringProp name="ThreadGroup.delay"></stringProp>        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>      </SetupThreadGroup>      <hashTree/>    <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="NeoLoad Backend Listener" enabled="true"><elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true"><collectionProp name="Arguments.arguments"/></elementProp><stringProp name="classname">com.tricentis.neoload.NeoLoadBackend</stringProp></BackendListener><hashTree/></hashTree></hashTree></jmeterTestPlan>